#!/usr/bin/env python

# Finds all the client devices which are probing for a specific SSID

import sys
import logging
logging.getLogger("scapy.runtime").setLevel(logging.ERROR)
from scapy.all import *

PROBE_REQ_TYPE = 0
PROBE_REQ_SUBTYPE = 4

# List to store client MACs
clients_list = []

def PacketHandler(pkt) :
        # Check if WiFi packet
        if pkt.haslayer(Dot11):
                # Check if Beacon frame
                if pkt.type == PROBE_REQ_TYPE and pkt.subtype == PROBE_REQ_SUBTYPE :
                        # Check if probed SSID is same as passed <ssid>
                        if pkt.info == sys.argv[3]:
                                # Check if client MAC present in list
                                if pkt.addr2 not in clients_list :
                                        # Add client MAC to list
                                        clients_list.append(pkt.addr2)
                                        print "Probe Request - Client: %s  SSID: %s" % (pkt.addr2, pkt.info)


# Command Arguments: <interface_name> <number_of_packets> <ssid>

# Sniffing on <interface_name> for <number_of_packets> packets
sniff(iface=sys.argv[1], count=int(sys.argv[2]), prn=PacketHandler)