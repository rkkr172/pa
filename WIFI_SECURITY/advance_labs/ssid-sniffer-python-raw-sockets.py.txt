#!/usr/bin/env python

# Raw socket implementaiton of a SSID Sniffer
# Assumes that SSID is the first tagged parameter

# Command Arguments: None

import socket

# Creating socket
rawSocket = socket.socket(socket.AF_PACKET, socket.SOCK_RAW, socket.htons(0x0003))

# Binding socket
rawSocket.bind(("wlan0", 0x0003))

# Set to store SSIDs
ap_list = set()


# Infinite loop to get packets
while True :

  # Reading from socket
  pkt = rawSocket.recvfrom(2048)[0]

  # Checking if correct packet
  if pkt[26] == "\x80" :
                # Check if SSID already presetn in ap_list set
                if pkt[36:42] not in ap_list  and ord(pkt[63]) > 0:
                        # Adding SSID to set
                        ap_list.add(pkt[36:42])
                        # Printing SSID and BSSID
                        print "SSID: %s  AP MAC: %s" % (pkt[64:64 +ord(pkt[63])], pkt[36:42].encode('hex'))